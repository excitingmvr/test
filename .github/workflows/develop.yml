name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for root gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build
      - name: create main boot jar
        run: ./gradlew bootJar -p ./test_web_xdm
      - name: Copy Jar
        run: cp ./test_web_xdm/build/libs/test_web_xdm-0.0.1-SNAPSHOT.jar deploy.jar

      - name: Cleanup Gradle Cache
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: cp appspec file
        run: cp ./test_web_xdm/appspec-test_web_xdm.yml appspec.yml

      - name: cp script files
        run: cp ./test_web_xdm/scripts ./scripts

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip ./appspec.yml ./deploy.jar ./scripts
        shell: bash

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://test-awss3-vic
      - name: code deploy
        run: aws deploy create-deployment --application-name test-server --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name test-server-group --s3-location bucket=test-awss3-vic,bundleType=zip,key=$GITHUB_SHA.zip